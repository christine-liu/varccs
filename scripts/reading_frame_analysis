#!/bin/bash

echo ""
echo "Reading frame analysis"
echo ""

# Get scripts directory; supports symlinks
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" 
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"

exe=$(basename $0)

if [[ $# -lt 1 ]]; then
  echo "$exe: need to provide arguments. see -h or --help."
  exit
fi
if [[ $# -lt 2 && "$1" != "-h" && "$1" != "--help" ]]; then
  echo "$exe: need to provide arguments. see -h or --help."
  exit
fi

while [[ $# -gt 1 || "$1" == "-h" || "$1" == "--help" ]]
do
  key="$1"
  case $key in
    -i|--input-exon-table) # Input FASTA file with processed / qc'ed reads
    input_exon_table="$2"
    shift # past argument
    ;;
    -e|--input-exon-fasta)
    input_exon_fasta="$2"
    shift
    ;;
    -o|--output-contigs)
    output_contigs="$2"
    shift
    ;;
    --del-intermediate-files) # Delete all intermediate files?
    del_files="$2"
    shift
    ;;
    -h|--help) # Show program usage
    cat $DIR/manuals/${exe}.txt | more
    exit
    shift
    ;;    
    --default)
    DEFAULT=YES
    ;;
    *)
    echo "$exe: unknown argument $key"
    # unknown option
    ;;
  esac
  shift # past argument or value
done

if [ -z "$del_files" ]; then
  del_files=1
fi

# Generate exon lengths and exon orf offsets, then pass those files as
# arguments to run_reading_frame_analysis.R
output_exon_orfs="${input_exon_fasta%.*}_orfs.txt"

$DIR/generate_reference_exon_orfs \
  $input_exon_fasta $output_exon_orfs

Rscript $DIR/run_reading_frame_analysis.R \
  --input-exon-table $input_exon_table \
  --input-exon-orfs  $output_exon_orfs \
  --output-contigs $output_contigs

if [[ "$del_files" -eq "1" ]]; then
  echo -n "* Deleting temporary files..."
  rm $output_exon_orfs
  echo " OK."
fi